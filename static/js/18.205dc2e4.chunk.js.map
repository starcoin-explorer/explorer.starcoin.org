{"version":3,"sources":["modules/MainnetCountdown/index.tsx"],"names":["localizedFormat","require","dayjs","extend","Index","props","onChange","event","value","target","setState","onSearch","pushLocation","state","trim","renderCard","title","url","content","cardClassName","cardSpacerClassName","className","classes","card","cardHeader","variant","button","color","onClick","search","t","epochData","barnardLatestInfo","intervalFunc","bind","timeout","location","this","newNetwork","network","localStorage","setItem","getBlockList","page","getTransactionList","getEpochData","then","data","getBarnardLatestInfo","window","setTimeout","Home","lazy","i18n","locale","language","currentBlock","dateTime","milliseconds","mainnetBlock","mainnetOnline","Date","now","Completionist","redirectNetwork","pathname","slice","console","log","container","spacing","justify","item","xs","style","textAlign","fontSize","fontWeight","elevation","borderBottomLeftRadius","borderBottomRightRadius","height","marginRight","marginLeft","marginBottom","isValid","format","date","renderer","days","hours","minutes","seconds","completed","zeroPad","marginTop","paddingBottom","paddingTop","align","PureComponent","defaultProps","blockList","transactionList","withStyles","theme","createStyles","breakpoints","down","cardContainer","blocks","paddingLeft","paddingRight","searchField","padding","metric","up","blocksAndTransactions","flexWrap","width","transactions","textFieldLabel","blocksSpacer","transactionsSpacer","alignItems","display","flex","flexGrow","flexDirection","borderBottom","justifyContent","borderLeft","withTranslation"],"mappings":"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","file":"static/js/18.205dc2e4.chunk.js","sourcesContent":["import React, { PureComponent, lazy } from 'react';\n// import { Redirect } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport Countdown, { zeroPad } from 'react-countdown';\nimport { withStyles, createStyles, Theme } from '@material-ui/core/styles';\n// import TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { getEpochData, getBarnardLatestInfo } from '@/utils/sdk';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/zh-cn';\nimport 'dayjs/locale/en';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\n\nconst localizedFormat = require('dayjs/plugin/localizedFormat');\n\ndayjs.extend(localizedFormat);\n\n// import { getNetwork } from '@/utils/helper';\n// import formatTime from '@/utils/formatTime';\n// import formatNumber from '@/utils/formatNumber';\n// import BlockTable from '../Blocks/components/Table';\n// import TransactionTable from '../Transactions/components/Table';\n\nconst useStyles = (theme: Theme) => createStyles({\n  [theme.breakpoints.down('sm')]: {\n    cardContainer: {\n      marginBottom: theme.spacing(1),\n    },\n    blocks: {\n      marginBottom: theme.spacing(1),\n    },\n    cardHeader: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n    searchField: {\n      padding: theme.spacing(1),\n    },\n    title: {\n      fontSize: '1.125rem',\n    },\n    metric: {\n      paddingLeft: theme.spacing(2),\n    }\n  },\n  [theme.breakpoints.up('sm')]: {\n    cardContainer: {\n      marginBottom: theme.spacing(2),\n    },\n    cardHeader: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n    },\n    searchField: {\n      padding: theme.spacing(2),\n    },\n    title: {\n      fontSize: '1.325rem',\n    },\n    metric: {\n      paddingLeft: theme.spacing(4),\n    }\n  },\n  [theme.breakpoints.down('md')]: {\n    blocksAndTransactions: {\n      flexWrap: 'wrap',\n    },\n    blocks: {\n      width: '100%',\n      marginBottom: theme.spacing(2),\n    },\n    transactions: {\n      width: '100%'\n    },\n    textFieldLabel: {\n      fontSize: '0.75em'\n    }\n  },\n  [theme.breakpoints.up('md')]: {\n    blocks: {\n      width: '50%',\n    },\n    blocksSpacer: {\n      paddingRight: theme.spacing(1),\n    },\n    transactions: {\n      width: '50%',\n    },\n    transactionsSpacer: {\n      paddingLeft: theme.spacing(1),\n    },\n    textFieldLabel: {\n      fontSize: '1em'\n    }\n  },\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    flex: '1 1 auto',\n    flexGrow: 1,\n  },\n  cardContainer: {\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardHeader: {\n    alignItems: 'center',\n    borderBottom: '1px solid rgba(0, 0, 0, 0.075)',\n    display: 'flex',\n    justifyContent: 'space-between',\n    paddingBottom: theme.spacing(2),\n    paddingTop: theme.spacing(2),\n  },\n\n  blocksAndTransactions: {\n    display: 'flex',\n  },\n  blocks: {\n    flex: '1 1 auto',\n  },\n  blocksSpacer: {},\n  transactionsSpacer: {},\n  transactions: {\n    flex: '1 1 auto',\n  },\n  searchField: {\n    alignItems: 'center',\n    display: 'flex',\n    flex: '1 1 auto',\n  },\n  textField: {\n    display: 'flex',\n    flex: '1 1 auto',\n    marginRight: theme.spacing(1),\n  },\n  textFieldLabel: {},\n  button: {\n    height: theme.spacing(5),\n  },\n  search: {\n  },\n  title: {\n    fontWeight: 700\n  },\n  metric: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    borderLeft: '1px solid rgba(0, 0, 0, 0.075)',\n  }\n});\n\ninterface IndexProps {\n  classes: any;\n  t: any;\n  i18n: any;\n  blockList: any;\n  getBlockList: (data: any, callback?: any) => any;\n  transactionList: any;\n  getTransactionList: (data: any, callback?: any) => any;\n  pushLocation: (data: any) => any;\n  location: any;\n}\n\ninterface IndexState {\n  value: string,\n  epochData: any,\n  barnardLatestInfo: any\n}\n\nclass Index extends PureComponent<IndexProps, IndexState> {\n  // eslint-disable-next-line react/static-property-placement\n  static defaultProps = {\n    blockList: null,\n    getBlockList: () => { },\n    transactionList: null,\n    getTransactionList: () => { },\n    pushLocation: () => { }\n  };\n\n  constructor(props: IndexProps) {\n    super(props);\n    this.state = {\n      value: '',\n      epochData: null,\n      barnardLatestInfo: []\n    };\n    this.intervalFunc = this.intervalFunc.bind(this); // Here\n    this.timeout = this.timeout.bind(this); // Here\n  }\n\n  componentDidMount() {\n    // check redirection\n    const { location } = this.props;\n    if (location.state) {\n      const newNetwork = location.state.network;\n      localStorage.setItem('network', newNetwork);\n      this.props.getBlockList({ network: 'barnard', page: 1 });\n      this.props.getTransactionList({ network: 'barnard', page: 1 });\n    } else {\n      this.props.getBlockList({ network: 'barnard', page: 1 });\n      this.props.getTransactionList({ network: 'barnard', page: 1 });\n    }\n    getEpochData().then(data => {\n      if (data) {\n        this.setState({ epochData: data });\n      }\n    });\n    getBarnardLatestInfo().then(data => {\n      if (data) {\n        this.setState({ barnardLatestInfo: data });\n      }\n    });\n    this.timeout();\n  }\n  \n  onChange = (event: any) => {\n    const { value } = event.target;\n    this.setState({ value });\n  };\n\n  onSearch = () => {\n    this.props.pushLocation(`/search/${this.state.value.trim()}`);\n  };\n\n  intervalFunc() {\n    getBarnardLatestInfo().then(data => {\n      if (data) {\n        this.setState({ barnardLatestInfo: data });\n        this.timeout(); // Here\n      }\n    });\n  }\n\n  timeout() {\n    window.setTimeout(this.intervalFunc, 19000); // Here\n  }\n\n  renderCard = (\n    title: string,\n    url: string,\n    content: any,\n    cardClassName: any,\n    cardSpacerClassName: any,\n  ) => (\n    <div className={cardClassName}>\n      <div className={cardSpacerClassName}>\n        <Card className={this.props.classes.card}>\n          <div className={this.props.classes.cardHeader}>\n            <Typography className={this.props.classes.title} variant=\"h4\">{title}</Typography>\n            <Button\n              className={this.props.classes.button}\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={() => this.props.pushLocation(url)}\n            >\n              <Typography className={this.props.classes.search} variant=\"body1\">\n                {this.props.t('home.viewAll')}\n              </Typography>\n            </Button>\n          </div>\n          {content}\n        </Card>\n      </div>\n    </div>\n  );\n\n  render() {\n    const Home = lazy(() => import('../Home/adapter'));\n\n    const { t, i18n } = this.props;\n\n    dayjs.locale('en');\n\n    if (i18n.language === 'zh') {\n      dayjs.locale('zh-cn');\n    }\n    const mainnetBlock = 310000;\n    let currentBlock;\n\n    let mainnetOnline:boolean = false;\n    let dateTime;\n    let milliseconds;\n    // let date;\n\n    if (this.state.barnardLatestInfo !== []) {\n      currentBlock = this.state.barnardLatestInfo[0];\n      if (currentBlock >= mainnetBlock) {\n        mainnetOnline = true;\n      }\n      const blockTime = this.state.barnardLatestInfo[1];\n      milliseconds = (mainnetBlock - currentBlock) * blockTime;\n      dateTime = new Date(Date.now() + milliseconds);\n      // date = dayjs(dateTime).format('LLLL');\n    }\n\n    const Completionist = () => <span>Starcoin Main Network Launched Successfully!</span>;\n\n    const renderer = ({\n      days,\n      hours,\n      minutes,\n      seconds,\n      // milliseconds,\n      completed\n    }:any):any => {\n      if (completed) {\n        // Render a completed state\n        return <Completionist />;\n      }\n      // Render a countdown\n      return (\n        <div className=\"classes.root\">\n          <Grid container spacing={3}>\n            <Grid item xs={3}>\n              <Paper elevation={3}>\n                <div\n                  className=\"\"\n                  style={{\n                    fontSize: '4rem',\n                    textAlign: 'center',\n                    color: '#3F3F3F'\n                  }}\n                >\n                  {days ? zeroPad(days) : '00'}\n                </div>\n                <div\n                  style={{\n                    fontSize: '1.4rem',\n                    textAlign: 'center',\n                    color: '#3F3F3F',\n                    marginTop: '-0.5rem',\n                    paddingBottom: '0.5rem'\n\n                  }}\n                >\n                  { t('countdown.day') }\n                </div>\n              </Paper>\n            </Grid>\n            <Grid item xs={3}>\n              <Paper elevation={3}>\n                <div\n                  className=\"\"\n                  style={{\n                    fontSize: '4rem',\n                    textAlign: 'center',\n                    color: '#3F3F3F'\n                  }}\n                >\n                  {hours ? zeroPad(hours) : '00'}\n                </div>\n                <div\n                  style={{\n                    fontSize: '1.4rem',\n                    textAlign: 'center',\n                    color: '#3F3F3F',\n                    marginTop: '-0.5rem',\n                    paddingBottom: '0.5rem'\n\n                  }}\n                >\n                  { t('countdown.hour') }\n                </div>\n              </Paper>\n            </Grid>\n            <Grid item xs={3}>\n              <Paper elevation={3}>\n                <div\n                  className=\"\"\n                  style={{\n                    fontSize: '4rem',\n                    textAlign: 'center',\n                    color: '#3F3F3F'\n                  }}\n                >\n                  {minutes ? zeroPad(minutes) : '00'}\n                </div>\n                <div\n                  style={{\n                    fontSize: '1.4rem',\n                    textAlign: 'center',\n                    color: '#3F3F3F',\n                    marginTop: '-0.5rem',\n                    paddingBottom: '0.5rem'\n\n                  }}\n                >\n                  { t('countdown.minute') }\n                </div>\n              </Paper>\n            </Grid>\n            <Grid item xs={3}>\n              <Paper elevation={3}>\n                <div\n                  className=\"\"\n                  style={{\n                    fontSize: '4rem',\n                    textAlign: 'center',\n                    color: '#3F3F3F'\n                  }}\n                >\n                  {seconds ? zeroPad(seconds) : '00'}\n                </div>\n                <div\n                  style={{\n                    fontSize: '1.4rem',\n                    textAlign: 'center',\n                    color: '#3F3F3F',\n                    marginTop: '-0.5rem',\n                    paddingBottom: '0.5rem'\n\n                  }}\n                >\n                  { t('countdown.second') }\n                </div>\n              </Paper>\n            </Grid>\n          </Grid>\n        </div>\n      );\n    };\n\n    /*\n    const Countdown = (\n      <Countdown date={dateTime} renderer={renderer} />\n    )\n    */\n\n    const { location } = this.props;\n    const redirectNetwork = location.pathname.slice(1);\n    localStorage.setItem('network', redirectNetwork);\n\n    if (this.state.barnardLatestInfo !== []) {\n      console.log('latest info:', this.state.barnardLatestInfo);\n    }\n\n    // const { t } = this.props;\n    /*\n    const blocksHit = blockList && blockList.hits && blockList.hits.hits ? blockList.hits.hits : [];\n    const blocks = blocksHit.slice(0, 12);\n    const transactionHit = transactionList && transactionList.hits ? transactionList.hits : [];\n    const transactions = transactionHit.slice(0, 15);\n    const metrics: any[] = [];\n    if (this.state.epochData) {\n      metrics.push(['Epoch', `${this.state.epochData.number}th`]);\n      metrics.push([t('home.EpochStartTime'), formatTime(this.state.epochData.start_time, i18n.language)]);\n      metrics.push([t('home.StartEndBlock'), `${formatNumber(this.state.epochData.start_block_number)} - ${formatNumber(this.state.epochData.end_block_number)}`]);\n      metrics.push([t('home.TargetBlockTime'), formatNumber((this.state.epochData.block_time_target / 1000).toFixed(0))]);\n      if (blocks && blocks.length > 0 && this.state.epochData.block_time_target > 0) {\n        // const currentBlockDiff = Number(blocks[0]._source.header.difficulty);\n        // const currentHashRate = formatNumber((currentBlockDiff / this.state.epochData.block_time_target * 1000).toFixed(0));\n        let totalDiff = 0;\n        for (let i = 0; i < blocksHit.length; i++) {\n          totalDiff += blocksHit[i]._source.header.difficulty_number;\n        }\n        const averageBlockDiff = Number(totalDiff / blocksHit.length);\n        const endTime = blocksHit[0]._source.header.timestamp;\n        const startTime = blocksHit[blocksHit.length - 1]._source.header.timestamp;\n        const averageBlockTime = Number((endTime - startTime) / blocksHit.length);\n        const averageHashRate = formatNumber((averageBlockDiff / averageBlockTime * 1000).toFixed(0));\n        metrics.push([t('home.CurrentHashRate'), averageHashRate]);\n      }\n    }\n    */\n    return (\n      (!mainnetOnline) ? (\n        <>\n          <Grid container spacing={3} justify=\"center\">\n            <Grid item xs={8} style={{ textAlign: 'center' }}>\n              <br />\n              <Grid container spacing={3} justify=\"center\">\n                <Grid item xs={12} style={{ textAlign: 'center' }}>\n                  <div\n                    style={{\n                      fontSize: '1.6rem',\n                      fontWeight: 600,\n                      textAlign: 'center',\n                      color: '#3F3F3F'\n                    }}\n                  >\n                    { t('countdown.title') }\n                  </div>\n                </Grid>\n              </Grid>\n              <Grid container spacing={3} justify=\"center\">\n                <Grid item xs={12} style={{ textAlign: 'center' }}>\n                  <Paper\n                    elevation={3}\n                    style={{\n                      borderBottomLeftRadius: '0px',\n                      borderBottomRightRadius: '0px',\n                    }}\n                  >\n                    <div\n                      style={{\n                        fontSize: '4rem',\n                        textAlign: 'center',\n                        color: '#3F3F3F',\n                      }}\n                    >\n                      { currentBlock ? (mainnetBlock - currentBlock) : 0 }\n                    </div>\n                  </Paper>\n                  <LinearProgress\n                    variant=\"determinate\"\n                    color=\"primary\"\n                    value={(currentBlock / mainnetBlock) * 100}\n                    style={{\n                      height: 10,\n                      marginRight: '-1px',\n                      marginLeft: '-1px',\n                      borderBottomLeftRadius: '4px',\n                      borderBottomRightRadius: '4px',\n                    }}\n                  />\n                </Grid>\n                <br />\n                <Grid item xs={12} style={{ textAlign: 'left', fontSize: '1.2rem' }}>\n                  <div style={{ marginBottom: '0.4rem' }}>\n                    { t('countdown.barnardBlock') }<strong>{ currentBlock || 0 }</strong>\n                  </div>\n                  <div style={{ marginBottom: '0.4rem' }}>\n                    { t('countdown.mainnetBlock') }<strong>310000</strong>\n                  </div>\n                  <div style={{ marginBottom: '0.4rem' }}>\n                    { t('countdown.launchtime') }\n                    <strong>\n                      { dayjs(dateTime).isValid() ? dayjs(dateTime).format('LLLL') : t('countdown.gettime') }\n                    </strong>\n                  </div>\n                </Grid>\n              </Grid>\n              {/*\n              <Grid container spacing={3} justify=\"center\">\n                <Grid item xs={12} style={{ textAlign: 'center' }}>\n                  <div\n                    style={{\n                      fontSize: '1.6rem',\n                      fontWeight: 600,\n                      textAlign: 'center',\n                      color: '#3F3F3F'\n                    }}\n                  >\n                    { t('countdown.launchtime') }\n                  </div>\n                </Grid>\n              </Grid>\n              <Grid container spacing={3} justify=\"center\">\n                <Grid item xs={12} style={{ textAlign: 'center' }}>\n                  <Paper\n                    elevation={3}\n                    style={{\n                      paddingTop: '2rem',\n                      paddingBottom: '2rem',\n                    }}\n                  >\n                    <div\n                      style={{\n                        fontSize: '3rem',\n                        textAlign: 'center',\n                        color: '#3F3F3F',\n                      }}\n                    >\n                      { dayjs(dateTime).isValid() ? dayjs(dateTime).format('LLLL') : t('countdown.gettime') }\n                    </div>\n                  </Paper>\n                </Grid>\n              </Grid>\n              */}\n              <br />\n              <br />\n              <Grid container spacing={3} justify=\"center\">\n                <Grid item xs={12} style={{ textAlign: 'center' }}>\n                  <div\n                    style={{\n                      fontSize: '1.6rem',\n                      fontWeight: 600,\n                      textAlign: 'center',\n                      color: '#3F3F3F'\n                    }}\n                  >\n                    { t('countdown.countdown') }\n                  </div>\n                </Grid>\n              </Grid>\n              <Countdown date={dateTime} renderer={renderer} />\n              <br />\n              <br />\n              <Grid container spacing={3} justify=\"center\">\n                <Grid item xs={12} style={{ textAlign: 'center' }}>\n                  <div\n                    style={{\n                      fontSize: '1.6rem',\n                      fontWeight: 600,\n                      textAlign: 'center',\n                      color: '#3F3F3F'\n                    }}\n                  >\n                    Starcoin { t('countdown.eventsline') }\n                  </div>\n                </Grid>\n              </Grid>\n              <Grid container spacing={3} justify=\"center\">\n                <Grid item xs={12} style={{ textAlign: 'left' }}>\n                  <Paper\n                    elevation={3}\n                    style={{\n                      paddingTop: '1rem',\n                      paddingBottom: '1rem',\n                    }}\n                  >\n                    { (i18n.language === 'en') ? (\n                      <Timeline align=\"alternate\">\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">2021.7.1</Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography color=\"textSecondary\">Launch Starcoin Layer 2 Project</Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">2021.6.18</Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography color=\"textSecondary\">Launch First Batch of Starcoin Move Ecosystem Projects</Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">\n                              { dayjs(dateTime).isValid() ? dayjs(dateTime).format('YYYY.MM.DD, HH:mm:ss') : t('countdown.gettime') }\n                            </Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot color=\"secondary\" />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography color=\"textSecondary\">\n                              <b>Launch Starcoin Main Network</b>\n                            </Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">2021.5.1-5.15</Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot color=\"primary\" />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography>Third Round of Barnard Test Network Mining Competition Event</Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">2021.3.27-4.27</Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot color=\"primary\" />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography>Second Round of Barnard Test Network Mining Competition Event</Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">2021.3.24-4.24</Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot color=\"primary\" />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography>Starcoin Barnard Test Network Security Bounty Programm</Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">2021.3.27</Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot color=\"primary\" />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography>Release Starcoin v1.0.0.beta and Launch Barnard Test Network</Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">2021.2.6</Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot color=\"primary\" />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography>Launch Starcoin Blockchain Explorer</Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">2020.12.18-12.21</Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot color=\"primary\" />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography>First Round of Test Network Mining Competition Event</Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">2020.8.6</Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot color=\"primary\" />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography>Release Starcoin v0.4 and Launch Proxima Test Network</Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">2020.4.9</Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot color=\"primary\" />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography>Release Starcoin v0.1 and Launch Halley Test Network</Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">End of 2019</Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot color=\"primary\" />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography>Implement the Stargate Prototype，and Decide to Develop Starcoin Based on the Move Ecosystem</Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">End of 2018</Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot color=\"primary\" />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography>Release First Version of the Starcoin Whitepaper</Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                      </Timeline>\n                    ) : (\n                      <Timeline align=\"alternate\">\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">2021.7.1</Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography color=\"textSecondary\">启动 Starcoin Layer 2 计划</Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">2021.6.18</Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography color=\"textSecondary\">Starcoin 第一批 Move 生态项目正式启动</Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">\n                              { dayjs(dateTime).isValid() ? dayjs(dateTime).format('YYYY.MM.DD, HH:mm:ss') : t('countdown.gettime') }\n                            </Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot color=\"secondary\" />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography color=\"textSecondary\">\n                              <b>预计 Starcoin 主网上线</b>\n                            </Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">2021.5.1-5月中</Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot color=\"primary\" />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography>第三轮测试网挖矿活动</Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">2021.3.27-4.27</Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot color=\"primary\" />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography>第二轮测试网挖矿活动</Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">2021.3.24-4.24</Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot color=\"primary\" />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography>Starcoin 测试网安全赏金计划</Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">2021.3.27</Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot color=\"primary\" />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography>Starcoin v1.0.0.beta 版本发布并启动 Barnard 测试网络</Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">2021.2.6</Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot color=\"primary\" />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography>Starcoin 区块浏览器上线</Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">2020.12.18-12.21</Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot color=\"primary\" />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography>第一轮测试网挖矿活动</Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">2020.8.6</Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot color=\"primary\" />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography>Starcoin v0.4 版本发布并启动 Proxima 测试网络</Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">2020.4.9</Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot color=\"primary\" />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography>Starcoin v0.1 版本发布并启动 Halley 测试网络</Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">2019年底</Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot color=\"primary\" />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography>完成 Stargate 原型实现，并正式决定基于 Move 体系开发</Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                        <TimelineItem>\n                          <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">2018年底</Typography>\n                          </TimelineOppositeContent>\n                          <TimelineSeparator>\n                            <TimelineDot color=\"primary\" />\n                            <TimelineConnector />\n                          </TimelineSeparator>\n                          <TimelineContent>\n                            <Typography>发布第一版 Starcoin 白皮书</Typography>\n                          </TimelineContent>\n                        </TimelineItem>\n                      </Timeline>\n                    )}\n                  </Paper>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </>\n      )\n        : <Home />\n    );\n  }\n}\n\nexport default withStyles(useStyles)(withTranslation()(Index));\n"],"sourceRoot":""}