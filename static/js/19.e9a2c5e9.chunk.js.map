{"version":3,"sources":["modules/Transactions/components/List/index.tsx","modules/Transactions/components/List/adapter.ts","modules/Transactions/components/Detail/index.tsx","modules/Transactions/components/Detail/adapter.ts","modules/Transactions/containers/index.tsx"],"names":["Index","props","fetchListPage","page","getTransactionList","pagination","type","hits","transactionList","contents","last","length","after","sort","state","currentPage","pagenationCallback","setState","this","isLoadingMore","className","classes","t","console","log","isInitialLoad","transactions","transactionsList","CenteredView","header","Typography","variant","gutterBottom","title","Helmet","ListView","name","pluralName","content","Loading","pagerArea","Pagination","pageSize","currentPageSize","hasPreviousPage","hasNextPage","onPrevPage","onNextPage","isLoading","PureComponent","defaultProps","undefined","withStyles","createStyles","alignItems","display","justifyContent","withTranslation","currentSelector","store","selector","actions","loadingSelector","createLoadingSelector","types","createSelector","current","loading","connect","hash","match","params","getTransaction","transaction","events","get","eventsTable","i","columns","event","eventTypeArray","type_tag","split","eventModule","eventName","eventDataDetail","eventKeyDetail","de","onchain_events","decodeEventData","data","toObject","toJS","e","eventKeyInHex","event_key","decodeEventKey","push","formatNumber","event_seq_number","EventViewTable","eventsContent","rawContent","JSON","stringify","Accordion","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","table","rawData","network","source","payloadInHex","sender","user_transaction","raw_txn","payload","functionName","moduleName","arg0","arg1","arg2","txnPayload","encoding","decodeTransactionPayload","Object","keys","func","ScriptFunction","module","args","bcs","BcsDeserializer","arrayify","deserializeU128","toString","transaction_hash","path","block_hash","BaseRouteLink","to","block_number","state_root_hash","status","gas_used","formatBalance","PageView","searchRoute","bodyColumns","extra","generateExtra","width","shrinkMaxCol","flex","minWidth","shrinkCol","wordBreak","overflow","TransactionsRouter","computedMatch","render","exac"],"mappings":"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","file":"static/js/19.e9a2c5e9.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Helmet from 'react-helmet';\nimport { createStyles, withStyles } from '@material-ui/core/styles';\nimport Loading from '@/common/Loading';\nimport ListView from '@/common/View/ListView';\nimport Pagination from '@/common/View/Pagination';\nimport Typography from '@material-ui/core/Typography';\nimport CenteredView from '@/common/View/CenteredView';\nimport TransactionTable from '../Table';\n\nconst useStyles = () => createStyles({\n  pagerArea: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n});\n\ninterface ExternalProps {\n  className?: string,\n}\n\ninterface InternalProps {\n  transactionList: any,\n  isLoadingMore: boolean,\n  getTransactionList: (contents: any, callback?: any) => any,\n  classes: any,\n  t: any,\n}\n\ninterface Props extends ExternalProps, InternalProps {}\n\ninterface IndexState {\n  currentPage: number\n}\n\nclass Index extends PureComponent<Props, IndexState> {\n  // eslint-disable-next-line react/static-property-placement\n  static defaultProps = {\n    transactionList: null,\n    isLoadingMore: undefined,\n    getTransactionList: () => {}\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      currentPage: 1,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchListPage(this.state.currentPage);\n  }\n\n  fetchListPage = (page: number) => {\n    this.props.getTransactionList({ page });\n  };\n\n  pagination = (type: string) => {\n    // transactions use timestamp as sort filed, so we can not jump to specific page\n    const hits = this.props.transactionList ? this.props.transactionList.contents : [];\n    const last = hits[hits.length - 1];\n    const after = last && last.sort || 0;\n    if (type === 'prev' && this.state.currentPage > 1) {\n      const page = this.state.currentPage - 1;\n      this.props.getTransactionList({ page, after }, () => { this.pagenationCallback(page); });\n    } else if (type === 'next') {\n      const page = this.state.currentPage + 1;\n      this.props.getTransactionList({ page, after }, () => { this.pagenationCallback(page); });\n    }\n  };\n\n  pagenationCallback = (page: number) => {\n    this.setState({ currentPage: page });\n  };\n\n  render() {\n    const { transactionList, isLoadingMore, className, classes, t } = this.props;\n    console.log({ transactionList });\n    const isInitialLoad = !transactionList;\n    const transactions = transactionList && transactionList.contents || [];\n    const transactionsList = transactions.length ? (\n      <TransactionTable\n        transactions={transactions}\n      />\n    ) : (\n      <CenteredView>\n        <div className={classes.header}>\n          <Typography variant=\"h5\" gutterBottom className={classes.title}>\n            {t('transaction.NoTransactionData')}\n          </Typography>\n        </div>\n      </CenteredView>\n    );\n    return (\n      <div>\n        <Helmet>\n          <title>{t('header.transactions')}</title>\n        </Helmet>\n        <ListView\n          className={className}\n          title={t('header.transactions')}\n          name={t('header.transactions')}\n          pluralName={t('header.transactions')}\n          content={\n            <div>\n              {isInitialLoad ? <Loading /> : transactionsList}\n              <div className={classes.pagerArea}>\n                <Pagination\n                  page={this.state.currentPage}\n                  pageSize={20}\n                  currentPageSize={transactions == null ? null : transactions.length}\n                  hasPreviousPage={this.state.currentPage > 1}\n                  hasNextPage={!!true}\n                  onPrevPage={() => this.pagination('prev')}\n                  onNextPage={() => this.pagination('next')}\n                  isLoading={isLoadingMore}\n                />\n              </div>\n            </div>\n          }\n        />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(withTranslation()(Index));\n","import { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n// @ts-ignore\nimport createLoadingSelector  from '@/rootStore/loading/selector';\nimport store from '@/Transactions/store';\nimport * as types from '@/Transactions/store/constants';\nimport Index from './index';\n\nconst { selector: currentSelector, actions } = store;\n\nconst loadingSelector = createLoadingSelector([types.GET_TRANSACTION_LIST]);\n\nconst selector = createSelector(\n  currentSelector,\n  loadingSelector,\n  (current, loading) => ({\n    transactionList: current.transactionList,\n    isLoadingMore: current.isLoadingMore,\n    loading\n  })\n);\n\nexport default connect(selector, {\n  getTransactionList: actions.getTransactionList\n})(Index) as any;","import React, { PureComponent } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport formatNumber from '@/utils/formatNumber';\nimport CommonLink from '@/common/Link';\nimport PageView from '@/common/View/PageView';\nimport EventViewTable from '@/common/View/EventViewTable';\nimport Loading from '@/common/Loading';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport { onchain_events, encoding, types, bcs } from '@starcoin/starcoin';\nimport { arrayify } from '@ethersproject/bytes';\nimport get from 'lodash/get';\nimport { formatBalance, toObject } from '@/utils/helper';\nimport BaseRouteLink from '@/common/BaseRouteLink';\n\nconst useStyles = () => createStyles({\n  table: {\n    width: '100%',\n    display: 'block',\n  },\n  shrinkMaxCol: {\n    flex: '1 100 auto',\n    minWidth: 60,\n  },\n  shrinkCol: {\n    flex: '1 10 auto',\n  },\n  rawData: {\n    wordBreak: 'break-all',\n    overflow: 'auto',\n  }\n});\n\ninterface IndexProps {\n  classes: any;\n  t: any;\n  match: any;\n  transaction: any;\n  getTransaction: (data: any, callback?: any) => any;\n}\n\nclass Index extends PureComponent<IndexProps> {\n  // eslint-disable-next-line react/static-property-placement\n  static defaultProps = {\n    match: {},\n    transaction: null,\n    getTransaction: () => { }\n  };\n\n  componentDidMount() {\n    const hash = this.props.match.params.hash;\n    this.props.getTransaction({ hash });\n  }\n\n  generateExtra() {\n    const { transaction, classes, t } = this.props;\n    const isInitialLoad = !transaction;\n    const events = get(transaction, 'events', []);\n    const eventsTable: any[] = [];\n\n    for (let i = 0; i < events.length; i++) {\n      const columns: any[] = [];\n      const event = events[i];\n      console.log({ event });\n      const eventTypeArray = event.type_tag.split('::');\n      console.log({ eventTypeArray });\n      const eventModule = eventTypeArray[1];\n      const eventName = eventTypeArray[2];\n      // const eventModule = 'Account';\n      // const eventName = 'WithdrawEvent';\n      let eventDataDetail;\n      let eventKeyDetail;\n      try {\n        const de = onchain_events.decodeEventData(eventName, event.data);\n        eventDataDetail = toObject(de.toJS());\n      } catch (e) {\n        console.log(e);\n        eventDataDetail = event.data;\n      }\n\n      try {\n        const eventKeyInHex = event.event_key;\n        const de = onchain_events.decodeEventKey(eventKeyInHex);\n        eventKeyDetail = toObject(de);\n      } catch (e) {\n        console.log(e);\n        eventKeyDetail = event.event_key;\n      }\n      columns.push([t('event.Data'), eventDataDetail]);\n      columns.push([t('event.Module'), eventModule]);\n      columns.push([t('event.Name'), eventName]);\n      columns.push([t('event.Key'), eventKeyDetail]);\n      columns.push([t('event.Seq'), formatNumber(event.event_seq_number)]);\n      eventsTable.push(<EventViewTable key={event.event_key} columns={columns} />);\n    }\n\n    const eventsContent = events.length ? eventsTable : <Typography variant=\"body1\">{t('event.NoEventData')}</Typography>;\n    const rawContent = <pre>{JSON.stringify(transaction, null, 2)}</pre> || <Typography variant=\"body1\">{t('transaction.NoRawData')}</Typography>;\n    return (\n      <div>\n        <br />\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography variant=\"h5\" gutterBottom>{t('header.events')}</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <div className={classes.table}>\n              <div className={classes.table}>\n                {isInitialLoad ? <Loading /> : eventsContent}\n              </div>\n            </div>\n          </AccordionDetails>\n        </Accordion>\n        <br />\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography variant=\"h5\" gutterBottom>{t('transaction.RawData')}</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <div className={classes.rawData}>\n              {isInitialLoad ? <Loading /> : rawContent}\n            </div>\n          </AccordionDetails>\n        </Accordion>\n      </div>\n    );\n  }\n\n  render() {\n    const { transaction, match, t } = this.props;\n    console.log(transaction);\n    if (!transaction) {\n      return <Loading />;\n    }\n    const network = match.params.network;\n    const source = transaction;\n    let payloadInHex = '';\n    let sender = '';\n    if (source.user_transaction && source.user_transaction.raw_txn) {\n      payloadInHex = source.user_transaction.raw_txn.payload;\n      sender = source.user_transaction.raw_txn.sender;\n    }\n    const txnPayload = payloadInHex ? encoding.decodeTransactionPayload(payloadInHex) : [];\n    const type = Object.keys(txnPayload)[0];\n\n    let functionName;\n    let moduleName;\n    let arg0;\n    let arg1;\n    let arg2;\n    if ('ScriptFunction' in txnPayload) {\n      const func = txnPayload.ScriptFunction.func as { address: types.AccountAddress, module: types.Identifier, functionName: types.Identifier };\n      functionName = func.functionName;\n      moduleName = func.module;\n      const args = txnPayload.ScriptFunction.args;\n      let de2;\n      try {\n        arg0 = args[0];\n        arg1 = args[1];\n        de2 = new bcs.BcsDeserializer(arrayify(args[2]));\n        arg2 = de2.deserializeU128().toString();\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    const columns = [\n      [t('common.Hash'), source.transaction_hash],\n      [t('transaction.Type'), type],\n      [t('transaction.BlockHash'), <CommonLink path={`/${network}/blocks/detail/${source.block_hash}`} title={source.block_hash} />],\n      [t('transaction.BlockHeight'), <BaseRouteLink to={`/${network}/blocks/height/${source.block_number}`}>{formatNumber(source.block_number)}</BaseRouteLink>],\n      // [t('common.Time'), new Date(parseInt(blockTime, 10)).toLocaleString()],\n      [t('transaction.StateRootHash'), source.state_root_hash],\n      [t('transaction.Status'), source.status],\n      [t('common.GasUsed'), source.gas_used],\n      [t('transaction.Sender'), <CommonLink path={`/${network}/address/${sender}`} title={sender} />]\n    ];\n\n    if (moduleName) {\n      columns.push([t('transaction.FunctionModuleName'), moduleName]);\n    }\n    if (functionName) {\n      columns.push([t('transaction.FunctionName'), functionName]);\n    }\n    if (arg0) {\n      columns.push([t('transaction.arg0'), <CommonLink path={`/${network}/address/${arg0}`} title={arg0} />]);\n    }\n    if (arg1) {\n      columns.push([t('transaction.arg1'), arg1]);\n    }\n    if (arg2) {\n      columns.push([t('transaction.arg2'), `${formatBalance(arg2)} STC`]);\n    }\n\n    return (\n      <PageView\n        id={source.transaction_hash}\n        title={t('transaction.title')}\n        name={t('transaction.title')}\n        pluralName={t('transaction.title')}\n        searchRoute={`/${network}/transactions`}\n        bodyColumns={columns}\n        extra={this.generateExtra()}\n      />\n    );\n  }\n}\n\nexport default withStyles(useStyles)(withTranslation()(Index));\n","import { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport createLoadingSelector  from '@/rootStore/loading/selector';\nimport store from '@/Transactions/store';\nimport * as types from '@/Transactions/store/constants';\nimport Index from './index';\n\nconst { selector: currentSelector, actions } = store;\n\nconst loadingSelector = createLoadingSelector([types.GET_TRANSACTION]);\n\nconst selector = createSelector(\n  currentSelector,\n  loadingSelector,\n  (current, loading) => ({\n    transaction: current.transaction,\n    loading\n  })\n);\n\nexport default connect(selector, {\n  getTransaction: actions.getTransaction\n})(Index) as any;","import React, { PureComponent } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport List from '../components/List/adapter';\nimport Detail from '../components/Detail/adapter';\n\ninterface TransactionsRouterProps {\n  computedMatch: any;\n}\n\nclass TransactionsRouter extends PureComponent<TransactionsRouterProps> {\n  render() {\n    const { computedMatch: match } = this.props;\n    return (\n      <Switch>\n        <Route path={`${match.path}/detail/:hash`} render={(props: any) => (<Detail {...props} />)} />\n        <Route exac path={`${match.path}`} render={(props: any) => (<List {...props} />)} />\n      </Switch>\n    );\n  }\n}\n\nexport default TransactionsRouter;\n"],"sourceRoot":""}