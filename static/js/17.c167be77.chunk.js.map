{"version":3,"sources":["common/Table/Column/index.tsx","common/Table/index.tsx","modules/Blocks/components/Table/index.tsx","modules/Blocks/components/List/index.tsx","modules/Blocks/components/List/adapter.ts","modules/Blocks/components/Detail/index.tsx","modules/Blocks/components/Detail/adapter.ts","modules/Blocks/containers/index.tsx"],"names":["Index","this","props","name","values","numeric","minWidth","visibleAt","firstCol","getRowHeightIn","getRowHeight","className","classes","idx","wrapValue","value","Typography","classNames","textRowBase","row","variant","cells","map","style","rowHeight","height","pad","baseRow","oddRow","element","root","alwaysVisible","header","Hidden","xsDown","smDown","mdDown","lgDown","xlDown","implementation","React","PureComponent","withStyles","theme","createStyles","breakpoints","down","paddingLeft","spacing","up","flex","flexDirection","display","alignItems","borderBottom","minHeight","whiteSpace","overflow","textOverflow","fontFamily","typography","fontSize","fontWeight","fontWeightRegular","color","palette","text","primary","fontWeightBold","secondary","backgroundColor","justifyContent","textAlign","columns","col","Column","paddingRight","blocks","authorVisibleAt","t","heightValues","timeValues","transactionsValues","authorValues","forEach","block","_source","blockUrl","getNetwork","number","authorUrl","author","push","BaseRouteLink","to","formatNumber","time","timestamp","body","Full","length","path","title","transactionsCol","validatorCol","Table","withTranslation","fetchListPage","page","getBlockList","pagination","type","total","blockList","hits","state","currentPage","pagenationCallback","setState","window","history","replaceState","parseInt","match","params","isLoadingMore","isInitialLoad","sort","a","b","Helmet","ListView","pluralName","content","Loading","sizeVisibleAt","pagerArea","Pagination","pageSize","currentPageSize","hasPreviousPage","hasNextPage","onPrevPage","onNextPage","isLoading","defaultProps","undefined","currentSelector","store","selector","actions","loadingSelector","createLoadingSelector","types","createSelector","current","loading","connect","epochData","hash","fetchData","prevProps","prevState","getBlock","getBlockTransactions","getBlockByHeight","getBlockTransactionsByHeight","blockTransactions","transactions","get","events","eventsTable","event","data","event_key","event_seq_number","PageViewTable","transactionsContent","eventsContent","Accordion","AccordionSummary","expandIcon","aria-controls","id","gutterBottom","AccordionDetails","table","network","block_hash","Date","toLocaleString","difficulty","gas_used","parent_hash","PageView","searchRoute","bodyColumns","extra","generateExtra","nextProps","width","shrinkMaxCol","shrinkCol","currentSelectorTransactions","storeTransactions","actionsTransactions","typesTransactions","BlocksRouter","computedMatch","render"],"mappings":"8PA4FMA,E,uKACM,IAAD,MAC4GC,KAAKC,MAAhHC,EADD,EACCA,KAAMC,EADP,EACOA,OAAQC,EADf,EACeA,QAASC,EADxB,EACwBA,SAAUC,EADlC,EACkCA,UAAWC,EAD7C,EAC6CA,SAAwBC,EADrE,EACuDC,aAA8BC,EADrF,EACqFA,UAAWC,EADhG,EACgGA,QAEjGF,EAAeD,GAAmB,SAACI,GAAD,OAAiB,MACnDC,EAAY,SAACC,GAAD,MACE,kBAAVA,EACN,cAACC,EAAA,EAAD,CACEL,UAAWM,IAAWL,EAAQM,YAAaN,EAAQO,KACnDC,QAAQ,QAFV,SAIGL,IAGHA,GAGEM,EAAQjB,EAAOkB,KAAI,SAACP,EAAOF,GAAS,IAAD,EACnCU,EACEC,EAAYd,EAAaG,GAI/B,OAHiB,MAAbW,IACFD,EAAQ,CAAEE,OAAQD,IAGlB,qBAEEb,UAAWM,KAAU,mBAClBL,EAAQc,KAAOlB,GADG,cAElBI,EAAQJ,SAAWA,GAFD,cAGlBI,EAAQe,SAAU,GAHA,cAIlBf,EAAQO,KAAM,GAJI,cAKlBP,EAAQgB,OAASf,EAAM,IAAM,GALX,cAMlBD,EAAQP,UAAYA,GANF,IAQrBkB,MAAOA,EAVT,SAYGT,EAAUC,IAXNF,MAeLgB,EACJ,sBACElB,UAAWM,KAAU,mBAEhBL,EAAQkB,MAAO,GAFC,cAGhBlB,EAAQmB,eAAgB,GAHR,cAIhBnB,EAAQN,UAAYA,GAJJ,GAMnBK,GAPJ,UAUE,qBACEA,UAAWM,KAAU,mBAClBL,EAAQc,KAAOlB,GADG,cAElBI,EAAQJ,SAAWA,GAFD,cAGlBI,EAAQe,SAAU,GAHA,cAIlBf,EAAQP,UAAYA,GAJF,IADvB,SAQE,cAACW,EAAA,EAAD,CACEL,UAAWM,IAAWL,EAAQM,YAAaN,EAAQoB,QACnDZ,QAAQ,QAFV,SAIGjB,MAGJkB,KAIL,OACE,cAACY,EAAA,EAAD,CACEC,OAAsB,OAAd3B,EACR4B,OAAsB,OAAd5B,EACR6B,OAAsB,OAAd7B,EACR8B,OAAsB,OAAd9B,EACR+B,OAAsB,OAAd/B,EACRgC,eAAe,KANjB,SAQGV,Q,GA/EWW,IAAMC,eAqFXC,eA3KG,SAACC,GAAD,aAAkBC,aAAY,mBAC7CD,EAAME,YAAYC,KAAK,MAAQ,CAC9BpB,IAAK,CACHqB,YAAaJ,EAAMK,QAAQ,IAE7BxC,SAAU,CACRuC,YAAaJ,EAAMK,QAAQ,MANe,cAS7CL,EAAME,YAAYI,GAAG,MAAQ,CAC5BvB,IAAK,CACHqB,YAAaJ,EAAMK,QAAQ,IAE7BxC,SAAU,CACRuC,YAAaJ,EAAMK,QAAQ,MAde,cAiB7CL,EAAME,YAAYI,GAAG,MAAQ,CAC5BvB,IAAK,CACHqB,YAAaJ,EAAMK,QAAQ,MAnBe,qBAsBxC,CACJE,KAAM,WACNC,cAAe,WAxB6B,yBA0BpC,CACR7C,SAAU,MA3BkC,8BA6B/B,CACb8C,QAAS,SA9BmC,wBAgCrC,CACPA,QAAS,OACTC,WAAY,SACZC,aAAc,iCACdC,UAAW,GACXC,WAAY,SACZC,SAAU,SACVC,aAAc,aAvC8B,oBAyCzC,CACHC,WAAYhB,EAAMiB,WAAWD,WAC7BE,SAAU,GACVC,WAAYnB,EAAMiB,WAAWG,kBAC7BC,MAAOrB,EAAMsB,QAAQC,KAAKC,UA7CkB,uBA+CtC,CACNR,WAAYhB,EAAMiB,WAAWD,WAC7BE,SAAU,GACVC,WAAYnB,EAAMiB,WAAWQ,eAC7BJ,MAAOrB,EAAMsB,QAAQC,KAAKG,YAnDkB,4BAqDjC,CACXb,WAAY,SACZC,SAAU,SACVC,aAAc,aAxD8B,uBA0DtC,CACNY,gBAAiB,yBA3D2B,wBA6DrC,CACPC,eAAgB,WAChBC,UAAW,UA/DiC,oBAiEzC,IAjEyC,yBAkEpC,IAlEoC,MA2KjC9B,CAAsB1C,GCnI/BA,E,uKACM,IAAD,EAC+DC,KAAKC,MAAnEuE,EADD,EACCA,QAAuBhE,EADxB,EACUC,aAA8BC,EADxC,EACwCA,UAAWC,EADnD,EACmDA,QAEpDF,EAAeD,GAAmB,SAACI,GAAD,OAAiB,MAEzD,OACE,qBAAKF,UAAWM,IAAWN,EAAWC,EAAQkB,MAA9C,SACG2C,EAAQnD,KAAI,SAACoD,EAAK7D,GAAN,OACX,cAAC8D,EAAD,CAEEhE,UAAW+D,EAAI/D,UACfR,KAAMuE,EAAIvE,KACVC,OAAQsE,EAAItE,OACZC,QAASqE,EAAIrE,QACbE,UAAWmE,EAAInE,UACfC,SAAkB,IAARK,EACVP,SAAUoE,EAAIpE,SACdI,aAAcA,GARTgE,EAAIvE,e,GAVDqC,IAAMC,eA0BXC,eAnEG,SAACC,GAAD,aAAkBC,aAAY,mBAC7CD,EAAME,YAAYC,KAAK,MAAQ,CAC9BhB,KAAM,CACJ,2BAA4B,CAC1B8C,aAAcjC,EAAMK,QAAQ,OAJY,cAQ7CL,EAAME,YAAYI,GAAG,MAAQ,CAC5BnB,KAAM,CACJ,2BAA4B,CAC1B8C,aAAcjC,EAAMK,QAAQ,OAXY,qBAexC,CACJI,QAAS,SAhBmC,MAmEjCV,CAAsB1C,G,2CCvC/BA,E,uKACM,IAAD,EACoDC,KAAKC,MAAxD2E,EADD,EACCA,OAAQC,EADT,EACSA,gBAAiBnE,EAD1B,EAC0BA,UAAWC,EADrC,EACqCA,QAASmE,EAD9C,EAC8CA,EAC/CC,EAAsB,GACtBC,EAAoB,GACpBC,EAA4B,GAC5BC,EAAsB,GAC5BN,EAAOO,SAAQ,SAACC,GACd,IAAMrD,EAASqD,EAAMC,QAAQtD,OACvBuD,EAAQ,WAAOC,cAAP,0BAAqCxD,EAAOyD,QACpDC,EAAS,WAAOF,cAAP,oBAA+BxD,EAAO2D,QACrDX,EAAaY,KAAK,cAACC,EAAA,EAAD,CAAeC,GAAIP,EAAnB,SAA8BQ,YAAa/D,EAAOyD,WACpER,EAAWW,KAAK,cAAC,IAAD,CAAYI,KAAMhE,EAAOiE,aACzCf,EAAmBU,KAAKG,YAAaV,EAAMC,QAAQY,KAAKC,KAAKC,SAC7DjB,EAAaS,KACX,cAAC,IAAD,CAAYS,KAAMX,EAAWY,MAAOtE,EAAO2D,aAG/C,IAAMlB,EAAU,CACd,CACEtE,KAAM4E,EAAE,gBACR3E,OAAQ4E,EACR1E,UAAU,GAEZ,CACEH,KAAM4E,EAAE,eACR3E,OAAQ6E,EACR3E,UAAU,GAEZ,CACEH,KAAM4E,EAAE,sBACR1E,SAAS,EACTD,OAAQ8E,EACRvE,UAAWC,EAAQ2F,iBAErB,CACEpG,KAAM4E,EAAE,gBACR3E,OAAQ+E,EACR5E,UAAWuE,EACXnE,UAAWC,EAAQ4F,eAGvB,OAAO,cAACC,EAAD,CAAO9F,UAAWA,EAAW8D,QAASA,Q,GA1C7BjC,IAAMC,eA8CXC,iBArEG,kBAAME,YAAa,CACnC2D,gBAAiB,CACfrD,KAAM,cAERsD,aAAc,CACZtD,KAAM,kBAgEKR,CAAsBgE,cAAkB1G,K,iOC1CjDA,E,kDAQJ,WAAYE,GAAe,IAAD,8BACxB,cAAMA,IAURyG,cAAgB,SAACC,GACf,EAAK1G,MAAM2G,aAAa,CAAED,UAZF,EAe1BE,WAAa,SAACC,GACZ,IAAMC,EAAQ,EAAK9G,MAAM+G,WAAa,EAAK/G,MAAM+G,UAAUC,KAAKF,MAAMjG,OAAS,EAC/E,GAAa,SAATgG,GAAmB,EAAKI,MAAMC,YAAc,EAAG,CACjD,IAAMR,EAAO,EAAKO,MAAMC,YAAc,EACtC,EAAKlH,MAAM2G,aAAa,CAAED,OAAMI,UAAS,WAAQ,EAAKK,mBAAmBT,WACpE,GAAa,SAATG,EAAiB,CAC1B,IAAMH,EAAO,EAAKO,MAAMC,YAAc,EACtC,EAAKlH,MAAM2G,aAAa,CAAED,OAAMI,UAAS,WAAQ,EAAKK,mBAAmBT,QAtBnD,EA0B1BS,mBAAqB,SAACT,GACpB,EAAKU,SAAS,CAAEF,YAAaR,IAC7BW,OAAOC,QAAQC,aAAa,KAAM,GAAlC,WAA0CjC,cAA1C,mBAAiEoB,KA1BjE,EAAKO,MAAQ,CACXC,YAAaM,SAASxH,EAAMyH,MAAMC,OAAOhB,KAAM,KAAO,GAHhC,E,gEAQxB3G,KAAK0G,cAAc1G,KAAKkH,MAAMC,e,+BAuBtB,IAAD,SACqDnH,KAAKC,MAAzD+G,EADD,EACCA,UAAWrG,EADZ,EACYA,QAASmE,EADrB,EACqBA,EAAGpE,EADxB,EACwBA,UAAWkH,EADnC,EACmCA,cACpCC,GAAiBb,EAEjBpC,GADOoC,GAAaA,EAAUC,KAAKA,MAAQ,IAC7Ba,MAAK,SAACC,EAAQC,GAAT,OAAoBA,EAAE3C,QAAQtD,OAAOyD,OAASuC,EAAE1C,QAAQtD,OAAOyD,UACxF,OACE,gCACE,cAACyC,EAAA,EAAD,UACE,gCAAQnD,EAAE,qBAEZ,cAACoD,EAAA,EAAD,CACExH,UAAWA,EACX2F,MAAOvB,EAAE,iBACT5E,KAAM4E,EAAE,iBACRqD,WAAYrD,EAAE,iBACdsD,QACE,gCACGP,EAAgB,cAACQ,EAAA,EAAD,IAAc,cAAC,IAAD,CAC7BzD,OAAQA,EACR0D,cAAc,KACdzD,gBAAgB,OAElB,qBAAKnE,UAAWC,EAAQ4H,UAAxB,SACE,cAACC,EAAA,EAAD,CACE7B,KAAM3G,KAAKkH,MAAMC,YACjBsB,SAAU,GACVC,gBAA2B,MAAV9D,EAAiB,KAAOA,EAAOuB,OAChDwC,gBAAiB3I,KAAKkH,MAAMC,YAAc,EAC1CyB,aAAa,EACbC,WAAY,kBAAM,EAAKhC,WAAW,SAClCiC,WAAY,kBAAM,EAAKjC,WAAW,SAClCkC,UAAWnB,kB,GAtETpF,iBAAdzC,EAEGiJ,aAAe,CACpBhC,UAAW,KACXY,mBAAeqB,EACfrC,aAAc,cA4EHnE,mBA5GG,kBAAME,YAAa,CACnC4F,UAAW,CACTnF,WAAY,SACZD,QAAS,OACTmB,eAAgB,gBAwGL7B,CAAsBgE,cAAkB1G,IC9GrCmJ,EAA6BC,IAAvCC,SAA2BC,EAAYF,IAAZE,QAE7BC,EAAkBC,YAAsB,CAACC,MAEzCJ,EAAWK,YACfP,EACAI,GACA,SAACI,EAASC,GAAV,MAAuB,CACrB3C,UAAW0C,EAAQ1C,UACnBY,cAAe8B,EAAQ9B,cACvB+B,cAIWC,cAAQR,EAAU,CAC/BxC,aAAcyC,EAAQzC,cADTgD,CAEZ7J,G,mICwBGA,E,kDAYJ,WAAYE,GAAoB,IAAD,8BAC7B,cAAMA,IACDiH,MAAQ,CACX2C,eAAWZ,EACXa,KAAM7J,EAAMyH,MAAMC,OAAOmC,KACzBtI,OAAQvB,EAAMyH,MAAMC,OAAOnG,QALA,E,gEAU7BxB,KAAK+J,c,yCAYYC,EAAgBC,GAC7BD,EAAUtC,MAAMC,OAAOmC,OAAS9J,KAAKkH,MAAM4C,MAAQG,EAAUH,OAAS9J,KAAKkH,MAAM4C,MACnF9J,KAAK+J,c,kCAKP,IAAMD,EAAO9J,KAAKkH,MAAM4C,KAClBtI,EAASxB,KAAKkH,MAAM1F,OACtBsI,IACF9J,KAAKC,MAAMiK,SAAS,CAAEJ,SACtB9J,KAAKC,MAAMkK,qBAAqB,CAAEL,UAEhCtI,IACFxB,KAAKC,MAAMmK,iBAAiB,CAAE5I,WAC9BxB,KAAKC,MAAMoK,6BAA6B,CAAE7I,c,sCAI7B,IAAD,EACmCxB,KAAKC,MAA9CmF,EADM,EACNA,MAAOkF,EADD,EACCA,kBAAmB3J,EADpB,EACoBA,QAASmE,EAD7B,EAC6BA,EACrC+C,GAAiBzC,EACjBmF,EAAeC,IAAIpF,EAAO,iCAAkC,IAC5DqF,EAASD,IAAIF,EAAmB,8BAA+B,IAC/DI,EAAqB,GAC3BD,EAAOtF,SAAQ,SAACwF,GACd,IAAMnG,EAAiB,GACvBA,EAAQmB,KAAK,CAACb,EAAE,cAAe6F,EAAMC,OACrCpG,EAAQmB,KAAK,CAACb,EAAE,aAAc6F,EAAME,YACpCrG,EAAQmB,KAAK,CAACb,EAAE,aAAcgB,YAAa6E,EAAMG,oBACjDJ,EAAY/E,KAAK,cAACoF,EAAA,EAAD,CAAqCvG,QAASA,GAA1BmG,EAAME,eAG7C,IAAMG,EAAsBT,EAAapE,OAAS,cAAC,IAAD,CAChDoE,aAAcA,IACX,cAACxJ,EAAA,EAAD,CAAYI,QAAQ,QAApB,SAA6B2D,EAAE,mCAE9BmG,EAAgBR,EAAOtE,OAASuE,EAAc,cAAC3J,EAAA,EAAD,CAAYI,QAAQ,QAApB,SAA6B2D,EAAE,uBACnF,OACE,gCACE,uBACA,eAACoG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,WAAY,cAAC,IAAD,IACZC,gBAAc,kBACdC,GAAG,iBAHL,SAKE,cAACvK,EAAA,EAAD,CAAYI,QAAQ,KAAKoK,cAAY,EAArC,SAAuCzG,EAAE,yBAE3C,cAAC0G,EAAA,EAAD,UACE,qBAAK9K,UAAWC,EAAQ8K,MAAxB,SACG5D,EAAgB,cAACQ,EAAA,EAAD,IAAc2C,SAIrC,uBACA,eAACE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,WAAY,cAAC,IAAD,IACZC,gBAAc,kBACdC,GAAG,iBAHL,SAKE,cAACvK,EAAA,EAAD,CAAYI,QAAQ,KAAKoK,cAAY,EAArC,SAAuCzG,EAAE,qBAE3C,cAAC0G,EAAA,EAAD,UACE,qBAAK9K,UAAWC,EAAQ8K,MAAxB,SACG5D,EAAgB,cAACQ,EAAA,EAAD,IAAc4C,c,+BAQjC,IAAD,EACwCjL,KAAKC,MAA5CmF,EADD,EACCA,MAAOkF,EADR,EACQA,kBAAmB5C,EAD3B,EAC2BA,MAAO5C,EADlC,EACkCA,EACnC4G,EAAUhE,EAAMC,OAAO+D,QAE7B,IADuBtG,IAAUkF,EAE/B,OAAO,cAACjC,EAAA,EAAD,IAET,IAAKjD,EAAM6B,KAAKA,KAAKd,OACnB,OAAO,KAET,IAAMpE,EAASqD,EAAM6B,KAAKA,KAAK,GAAG5B,QAAQtD,OACpCyC,EAAU,CACd,CAACM,EAAE,eAAgB/C,EAAO4J,YAC1B,CAAC7G,EAAE,gBAAiBgB,YAAa/D,EAAOyD,SACxC,CAACV,EAAE,eAAgB,IAAI8G,KAAKnE,SAAS1F,EAAOiE,UAAW,KAAK6F,kBAC5D,CAAC/G,EAAE,gBAAiB,cAAC,IAAD,CAAgCsB,KAAI,WAAMsF,EAAN,oBAAyB3J,EAAO2D,QAAUW,MAAOtE,EAAO2D,QAA3E3D,EAAO2D,SAC5C,CAACZ,EAAE,oBAAqB/C,EAAO+J,YAC/B,CAAChH,EAAE,kBAAmB/C,EAAOgK,UAC7B,CAACjH,EAAE,oBAAqB,cAAC,IAAD,CAAqCsB,KAAI,WAAMsF,EAAN,0BAA+B3J,EAAOiK,aAAe3F,MAAOtE,EAAOiK,aAA3FjK,EAAOiK,eAGlD,OACE,cAACC,EAAA,EAAD,CACEX,GAAIvJ,EAAO4J,WACXtF,MAAOvB,EAAE,eACT5E,KAAM4E,EAAE,eACRqD,WAAYrD,EAAE,iBACdoH,YAAW,WAAMR,EAAN,WACXS,YAAa3H,EACb4H,MAAOpM,KAAKqM,qB,gDAhHcC,EAAgBrC,GAG9C,OAAIqC,EAAU5E,MAAMC,OAAOmC,OAASG,EAAUH,KACrC,2BAAKG,GAAZ,IAAuBH,KAAMwC,EAAU5E,MAAMC,OAAOmC,KAAMtI,OAAQ,KAE7D,S,GA/BSgB,iBAAdzC,EAEGiJ,aAAe,CACpBtB,MAAO,GACPtC,MAAO,KACPkF,kBAAmB,KACnBJ,SAAU,aACVE,iBAAkB,aAClBD,qBAAsB,aACtBE,6BAA8B,cAsInB5H,mBA/KG,kBAAME,YAAa,CACnC8I,MAAO,CACLc,MAAO,OACPpJ,QAAS,SAEXqJ,aAAc,CACZvJ,KAAM,aACN5C,SAAU,IAEZoM,UAAW,CACTxJ,KAAM,iBAqKKR,CAAsBgE,cAAkB1G,ICtLrCmJ,EAA6BC,IAAvCC,SAA2BC,EAAYF,IAAZE,QACjBqD,EAA8DC,IAAxEvD,SAAgDwD,EAAwBD,IAAjCtD,QAEzCC,EAAkBC,YAAsB,CAACC,IAAiBA,IAA2BqD,IAA0CA,MAE/HzD,GAAWK,YACfP,EACAwD,EACApD,GACA,SAACI,EAASa,EAAcZ,GAAxB,MAAqC,CACnCvE,MAAOsE,EAAQtE,MACfkF,kBAAmBC,EAAaD,kBAChCX,cAIWC,eAAQR,GAAU,CAC/Bc,SAAUb,EAAQa,SAClBE,iBAAkBf,EAAQe,iBAC1BD,qBAAsByC,EAAoBzC,qBAC1CE,6BAA8BuC,EAAoBvC,8BAJrCT,CAKZ7J,GCrBG+M,G,uKACM,IACepF,EAAU1H,KAAKC,MAA9B8M,cACR,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO3G,KAAI,UAAKsB,EAAMtB,KAAX,mBAAkC4G,OAAQ,SAAC/M,GAAD,OAAiB,cAAC,GAAD,eAAYA,OAClF,cAAC,IAAD,CAAOmG,KAAI,UAAKsB,EAAMtB,KAAX,iBAAgC4G,OAAQ,SAAC/M,GAAD,OAAiB,cAAC,GAAD,eAAYA,OAChF,cAAC,IAAD,CAAOmG,KAAI,UAAKsB,EAAMtB,KAAX,UAAyB4G,OAAQ,SAAC/M,GAAD,OAAiB,cAAC,EAAD,eAAUA,c,GAPpDuC,iBAaZsK","file":"static/js/17.c167be77.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { createStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport Hidden from '@material-ui/core/Hidden';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = (theme: Theme) => createStyles({\n  [theme.breakpoints.down('sm')]: {\n    pad: {\n      paddingLeft: theme.spacing(1),\n    },\n    firstCol: {\n      paddingLeft: theme.spacing(1),\n    },\n  },\n  [theme.breakpoints.up('sm')]: {\n    pad: {\n      paddingLeft: theme.spacing(3),\n    },\n    firstCol: {\n      paddingLeft: theme.spacing(2),\n    },\n  },\n  [theme.breakpoints.up('md')]: {\n    pad: {\n      paddingLeft: theme.spacing(5),\n    },\n  },\n  root: {\n    flex: '1 1 auto',\n    flexDirection: 'column',\n  },\n  minWidth: {\n    minWidth: '0',\n  },\n  alwaysVisible: {\n    display: 'flex',\n  },\n  baseRow: {\n    display: 'flex',\n    alignItems: 'center',\n    borderBottom: '1px solid rgba(0, 0, 0, 0.075)',\n    minHeight: 48,\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  row: {\n    fontFamily: theme.typography.fontFamily,\n    fontSize: 14,\n    fontWeight: theme.typography.fontWeightRegular,\n    color: theme.palette.text.primary,\n  },\n  header: {\n    fontFamily: theme.typography.fontFamily,\n    fontSize: 14,\n    fontWeight: theme.typography.fontWeightBold,\n    color: theme.palette.text.secondary,\n  },\n  textRowBase: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  oddRow: {\n    backgroundColor: 'rgba(0, 0, 0, 0.075)',\n  },\n  numeric: {\n    justifyContent: 'flex-end',\n    textAlign: 'right',\n  },\n  pad: {},\n  firstCol: {},\n});\n\ninterface ExternalProps {\n  name: string,\n  values: Array<string | React.CElement<any, any>>,\n  numeric?: boolean,\n  minWidth?: boolean,\n  visibleAt?: string,\n  firstCol: boolean,\n  getRowHeight?: (idx: number) => number | null,\n  className?: string,\n}\n\ninterface InternalProps {\n classes: any,\n}\n\ninterface Props extends ExternalProps, InternalProps {}\n\nclass Index extends React.PureComponent<Props> {\n  render() {\n    const { name, values, numeric, minWidth, visibleAt, firstCol, getRowHeight: getRowHeightIn, className, classes } = this.props;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const getRowHeight = getRowHeightIn || ((idx: number) => null);\n    const wrapValue = (value: any) => (\n      (typeof value === 'string') ? (\n        <Typography\n          className={classNames(classes.textRowBase, classes.row)}\n          variant=\"body1\"\n        >\n          {value}\n        </Typography>\n      ) : (\n        value\n      )\n    );\n    const cells = values.map((value, idx) => {\n      let style;\n      const rowHeight = getRowHeight(idx);\n      if (rowHeight != null) {\n        style = { height: rowHeight };\n      }\n      return (\n        <div\n          key={idx}\n          className={classNames({\n            [classes.pad]: !firstCol,\n            [classes.firstCol]: firstCol,\n            [classes.baseRow]: true,\n            [classes.row]: true,\n            [classes.oddRow]: idx % 2 === 1,\n            [classes.numeric]: !!numeric,\n          })}\n          style={style}\n        >\n          {wrapValue(value)}\n        </div>\n      );\n    });\n    const element = (\n      <div\n        className={classNames(\n          {\n            [classes.root]: true,\n            [classes.alwaysVisible]: true,\n            [classes.minWidth]: !minWidth,\n          },\n          className,\n        )}\n      >\n        <div\n          className={classNames({\n            [classes.pad]: !firstCol,\n            [classes.firstCol]: firstCol,\n            [classes.baseRow]: true,\n            [classes.numeric]: !!numeric,\n          })}\n        >\n          <Typography\n            className={classNames(classes.textRowBase, classes.header)}\n            variant=\"body1\"\n          >\n            {name}\n          </Typography>\n        </div>\n        {cells}\n      </div>\n    );\n\n    return (\n      <Hidden\n        xsDown={visibleAt === 'xs'}\n        smDown={visibleAt === 'sm'}\n        mdDown={visibleAt === 'md'}\n        lgDown={visibleAt === 'lg'}\n        xlDown={visibleAt === 'xl'}\n        implementation=\"js\"\n      >\n        {element}\n      </Hidden>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Index);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { createStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport Column from './Column';\n\nconst useStyles = (theme: Theme) => createStyles({\n  [theme.breakpoints.down('sm')]: {\n    root: {\n      '& > div:last-child > div': {\n        paddingRight: theme.spacing(1),\n      },\n    },\n  },\n  [theme.breakpoints.up('sm')]: {\n    root: {\n      '& > div:last-child > div': {\n        paddingRight: theme.spacing(2),\n      },\n    },\n  },\n  root: {\n    display: 'flex',\n  },\n});\n\ninterface ColumnType {\n  name: string,\n  className?: string,\n  values: Array<string | React.CElement<any, any>>,\n  numeric?: boolean,\n  visibleAt?: string,\n  minWidth?: boolean,\n}\n\ninterface ExternalProps {\n  columns: Array<ColumnType>,\n  getRowHeight?: (idx: number) => number | null,\n  className?: string,\n}\n\ninterface InternalProps {\n classes: any,\n}\n\ninterface Props extends ExternalProps, InternalProps {}\n\nclass Index extends React.PureComponent<Props> {\n  render() {\n    const { columns, getRowHeight: getRowHeightIn, className, classes } = this.props;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const getRowHeight = getRowHeightIn || ((idx: number) => null);\n\n    return (\n      <div className={classNames(className, classes.root)}>\n        {columns.map((col, idx) => (\n          <Column\n            key={col.name}\n            className={col.className}\n            name={col.name}\n            values={col.values}\n            numeric={col.numeric}\n            visibleAt={col.visibleAt}\n            firstCol={idx === 0}\n            minWidth={col.minWidth}\n            getRowHeight={getRowHeight}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Index);\n","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { createStyles, withStyles } from '@material-ui/core/styles';\nimport Table from '@/common/Table';\nimport BaseRouteLink from '@/common/BaseRouteLink';\nimport formatNumber from '@/utils/formatNumber';\nimport { getNetwork } from '@/utils/helper';\nimport CommonLink from '@/common/Link';\nimport CommonTime from '@/common/Time';\n\nconst useStyles = () => createStyles({\n  transactionsCol: {\n    flex: '1 100 auto',\n  },\n  validatorCol: {\n    flex: '1 100 auto',\n  },\n});\n\ninterface ExternalProps {\n  blocks: any,\n  sizeVisibleAt: string,\n  authorVisibleAt: string,\n  className?: string,\n}\n\ninterface InternalProps {\n  classes: any,\n  t: any,\n}\n\ninterface Props extends ExternalProps, InternalProps {}\n\nclass Index extends React.PureComponent<Props> {\n  render() {\n    const { blocks, authorVisibleAt, className, classes, t } = this.props;\n    const heightValues: any[] = [];\n    const timeValues: any[] = [];\n    const transactionsValues: any[] = [];\n    const authorValues: any[] = [];\n    blocks.forEach((block: any) => {\n      const header = block._source.header;\n      const blockUrl = `/${getNetwork()}/blocks/height/${header.number}`;\n      const authorUrl = `/${getNetwork()}/address/${header.author}`;\n      heightValues.push(<BaseRouteLink to={blockUrl}>{formatNumber(header.number)}</BaseRouteLink>);\n      timeValues.push(<CommonTime time={header.timestamp} />);\n      transactionsValues.push(formatNumber(block._source.body.Full.length));\n      authorValues.push(\n        <CommonLink path={authorUrl} title={header.author} />\n      );\n    });\n    const columns = [\n      {\n        name: t('block.Height'),\n        values: heightValues,\n        minWidth: true,\n      },\n      {\n        name: t('common.Time'),\n        values: timeValues,\n        minWidth: true,\n      },\n      {\n        name: t('block.Transactions'),\n        numeric: true,\n        values: transactionsValues,\n        className: classes.transactionsCol,\n      },\n      {\n        name: t('block.Author'),\n        values: authorValues,\n        visibleAt: authorVisibleAt,\n        className: classes.validatorCol,\n      },\n    ];\n    return <Table className={className} columns={columns} />;\n  }\n}\n\nexport default withStyles(useStyles)(withTranslation()(Index));\n","import React, { PureComponent } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Helmet from 'react-helmet';\nimport { createStyles, withStyles } from '@material-ui/core/styles';\nimport Loading from '@/common/Loading';\nimport ListView from '@/common/View/ListView';\nimport Pagination from '@/common/View/Pagination';\nimport { getNetwork } from '@/utils/helper';\nimport BlockTable from '../Table';\n\nconst useStyles = () => createStyles({\n  pagerArea: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n});\n\ninterface ExternalProps {\n  className?: string,\n}\n\ninterface InternalProps {\n  blockList: any,\n  isLoadingMore: boolean,\n  getBlockList: (data: any, callback?: any) => any,\n  classes: any,\n  t: any,\n  match: any,\n}\n\ninterface Props extends ExternalProps, InternalProps {}\n\ninterface IndexState {\n  currentPage: number\n}\n\nclass Index extends PureComponent<Props, IndexState> {\n  // eslint-disable-next-line react/static-property-placement\n  static defaultProps = {\n    blockList: null,\n    isLoadingMore: undefined,\n    getBlockList: () => {}\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      currentPage: parseInt(props.match.params.page, 10) || 1,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchListPage(this.state.currentPage);\n  }\n\n  fetchListPage = (page: number) => {\n    this.props.getBlockList({ page });\n  };\n\n  pagination = (type: string) => {\n    const total = this.props.blockList && this.props.blockList.hits.total.value || 0;\n    if (type === 'prev' && this.state.currentPage > 1) {\n      const page = this.state.currentPage - 1;\n      this.props.getBlockList({ page, total }, () => { this.pagenationCallback(page); });\n    } else if (type === 'next') {\n      const page = this.state.currentPage + 1;\n      this.props.getBlockList({ page, total }, () => { this.pagenationCallback(page); });\n    }\n  };\n\n  pagenationCallback = (page: number) => {\n    this.setState({ currentPage: page });\n    window.history.replaceState(null, '', `/${getNetwork()}/blocks/${page}`);\n  };\n\n  render() {\n    const { blockList, classes, t, className, isLoadingMore } = this.props;\n    const isInitialLoad = !blockList;\n    const hits = blockList && blockList.hits.hits || [];\n    const blocks = hits.sort((a: any, b: any) => b._source.header.number - a._source.header.number);\n    return (\n      <div>\n        <Helmet>\n          <title>{t('header.blocks')}</title>\n        </Helmet>\n        <ListView\n          className={className}\n          title={t('header.blocks')}\n          name={t('header.blocks')}\n          pluralName={t('header.blocks')}\n          content={\n            <div>\n              {isInitialLoad ? <Loading /> : <BlockTable\n                blocks={blocks}\n                sizeVisibleAt=\"xs\"\n                authorVisibleAt=\"md\"\n              />}\n              <div className={classes.pagerArea}>\n                <Pagination\n                  page={this.state.currentPage}\n                  pageSize={20}\n                  currentPageSize={blocks == null ? null : blocks.length}\n                  hasPreviousPage={this.state.currentPage > 1}\n                  hasNextPage={!!true}\n                  onPrevPage={() => this.pagination('prev')}\n                  onNextPage={() => this.pagination('next')}\n                  isLoading={isLoadingMore}\n                />\n              </div>\n            </div>\n          }\n        />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(withTranslation()(Index));\n","import { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n// @ts-ignore\nimport createLoadingSelector  from '@/rootStore/loading/selector';\nimport store from '@/Blocks/store';\nimport * as types from '@/Blocks/store/constants';\nimport Index from './index';\n\nconst { selector: currentSelector, actions } = store;\n\nconst loadingSelector = createLoadingSelector([types.GET_BLOCK_LIST]);\n\nconst selector = createSelector(\n  currentSelector,\n  loadingSelector,\n  (current, loading) => ({\n    blockList: current.blockList,\n    isLoadingMore: current.isLoadingMore,\n    loading\n  })\n);\n\nexport default connect(selector, {\n  getBlockList: actions.getBlockList\n})(Index) as any;","import React, { PureComponent } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { createStyles, withStyles } from '@material-ui/core/styles';\nimport Loading from '@/common/Loading';\nimport TransactionTable from '@/Transactions/components/Table';\nimport PageView from '@/common/View/PageView';\nimport CommonLink from '@/common/Link';\nimport formatNumber from '@/utils/formatNumber';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport PageViewTable from '@/common/View/PageViewTable';\nimport get from 'lodash/get';\n\nconst useStyles = () => createStyles({\n  table: {\n    width: '100%',\n    display: 'block',\n  },\n  shrinkMaxCol: {\n    flex: '1 100 auto',\n    minWidth: 60,\n  },\n  shrinkCol: {\n    flex: '1 10 auto',\n  },\n});\n\ninterface IndexProps {\n  classes: any;\n  t: any;\n  match: any;\n  block: any;\n  blockTransactions: any;\n  getBlock: (data: any, callback?: any) => any;\n  getBlockByHeight: (data: any, callback?: any) => any;\n  getBlockTransactions: (data: any, callback?: any) => any;\n  getBlockTransactionsByHeight: (data: any, callback?: any) => any;\n}\n\ninterface IndexState {\n  epochData: any,\n  hash?: string,\n  height?: string,\n}\n\nclass Index extends PureComponent<IndexProps, IndexState> {\n  // eslint-disable-next-line react/static-property-placement\n  static defaultProps = {\n    match: {},\n    block: null,\n    blockTransactions: null,\n    getBlock: () => {},\n    getBlockByHeight: () => {},\n    getBlockTransactions: () => {},\n    getBlockTransactionsByHeight: () => {}\n  };\n\n  constructor(props: IndexProps) {\n    super(props);\n    this.state = {\n      epochData: undefined,\n      hash: props.match.params.hash,\n      height: props.match.params.height\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  static getDerivedStateFromProps(nextProps: any, prevState: any) {\n    // switch hash only in current page, won't switch height\n    // so only need to empty height while switch to /hash/xxx from height/xxx\n    if (nextProps.match.params.hash !== prevState.hash) {\n      return { ...prevState, hash: nextProps.match.params.hash, height: '' };\n    }\n    return null;\n  }\n\n  componentDidUpdate(prevProps: any, prevState: any) {\n    if (prevProps.match.params.hash !== this.state.hash && prevState.hash !== this.state.hash) {\n      this.fetchData();\n    }\n  }\n\n  fetchData() {\n    const hash = this.state.hash;\n    const height = this.state.height;\n    if (hash) {\n      this.props.getBlock({ hash });\n      this.props.getBlockTransactions({ hash });\n    }\n    if (height) {\n      this.props.getBlockByHeight({ height });\n      this.props.getBlockTransactionsByHeight({ height });\n    }\n  }\n\n  generateExtra() {\n    const { block, blockTransactions, classes, t } = this.props;\n    const isInitialLoad = !block;\n    const transactions = get(block, 'hits.hits[0]._source.body.Full', []);\n    const events = get(blockTransactions, 'hits.hits[0]._source.events', []);\n    const eventsTable: any[] = [];\n    events.forEach((event: any) => {\n      const columns: any[] = [];\n      columns.push([t('event.Data'), event.data]);\n      columns.push([t('event.Key'), event.event_key]);\n      columns.push([t('event.Seq'), formatNumber(event.event_seq_number)]);\n      eventsTable.push(<PageViewTable key={event.event_key} columns={columns} />);\n    });\n\n    const transactionsContent = transactions.length ? <TransactionTable\n      transactions={transactions}\n    /> : <Typography variant=\"body1\">{t('transaction.NoTransactionData')}</Typography>;\n\n    const eventsContent = events.length ? eventsTable : <Typography variant=\"body1\">{t('event.NoEventData')}</Typography>;\n    return (\n      <div>\n        <br />\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography variant=\"h5\" gutterBottom>{t('transaction.title')}</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <div className={classes.table}>\n              {isInitialLoad ? <Loading /> : transactionsContent}\n            </div>\n          </AccordionDetails>\n        </Accordion>\n        <br />\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography variant=\"h5\" gutterBottom>{t('header.events')}</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <div className={classes.table}>\n              {isInitialLoad ? <Loading /> : eventsContent}\n            </div>\n          </AccordionDetails>\n        </Accordion>\n      </div>\n    );\n  }\n\n  render() {\n    const { block, blockTransactions, match, t } = this.props;\n    const network = match.params.network;\n    const isInitialLoad = !block || !blockTransactions;\n    if (isInitialLoad) {\n      return <Loading />;\n    }\n    if (!block.hits.hits.length) {\n      return null;\n    }\n    const header = block.hits.hits[0]._source.header;\n    const columns = [\n      [t('common.Hash'), header.block_hash],\n      [t('block.Height'), formatNumber(header.number)],\n      [t('common.Time'), new Date(parseInt(header.timestamp, 10)).toLocaleString()],\n      [t('block.Author'), <CommonLink key={header.author} path={`/${network}/address/${header.author}`} title={header.author} />],\n      [t('block.Difficulty'), header.difficulty],\n      [t('common.GasUsed'), header.gas_used],\n      [t('block.ParentHash'), <CommonLink key={header.parent_hash} path={`/${network}/blocks/detail/${header.parent_hash}`} title={header.parent_hash} />],\n    ];\n\n    return (\n      <PageView\n        id={header.block_hash}\n        title={t('block.title')}\n        name={t('block.title')}\n        pluralName={t('header.blocks')}\n        searchRoute={`/${network}/blocks`}\n        bodyColumns={columns}\n        extra={this.generateExtra()}\n      />\n    );\n  }\n}\n\nexport default withStyles(useStyles)(withTranslation()(Index));\n","import { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport createLoadingSelector  from '@/rootStore/loading/selector';\nimport store from '@/Blocks/store';\nimport * as types from '@/Blocks/store/constants';\nimport * as typesTransactions from '@/Transactions/store/constants';\nimport storeTransactions from '@/Transactions/store';\nimport Index from './index';\n\nconst { selector: currentSelector, actions } = store;\nconst { selector: currentSelectorTransactions, actions: actionsTransactions } = storeTransactions;\n\nconst loadingSelector = createLoadingSelector([types.GET_BLOCK, types.GET_BLOCK_BY_HEIGHT, typesTransactions.GET_BLOCK_TRANSACTIONS, typesTransactions.GET_BLOCK_TRANSACTIONS_BY_HEIGHT]);\n\nconst selector = createSelector(\n  currentSelector,\n  currentSelectorTransactions,\n  loadingSelector,\n  (current, transactions, loading) => ({\n    block: current.block,\n    blockTransactions: transactions.blockTransactions,\n    loading\n  })\n);\n\nexport default connect(selector, {\n  getBlock: actions.getBlock,\n  getBlockByHeight: actions.getBlockByHeight,\n  getBlockTransactions: actionsTransactions.getBlockTransactions,\n  getBlockTransactionsByHeight: actionsTransactions.getBlockTransactionsByHeight\n})(Index) as any;","import React, { PureComponent } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport List from '../components/List/adapter';\nimport Detail from '../components/Detail/adapter';\n\ninterface BlocksRouterProps {\n  computedMatch: any;\n}\n\nclass BlocksRouter extends PureComponent<BlocksRouterProps> {\n  render() {\n    const { computedMatch: match } = this.props;\n    return (\n      <Switch>\n        <Route path={`${match.path}/height/:height`} render={(props: any) => (<Detail {...props} />)} />\n        <Route path={`${match.path}/detail/:hash`} render={(props: any) => (<Detail {...props} />)} />\n        <Route path={`${match.path}/:page`} render={(props: any) => (<List {...props} />)} />\n      </Switch>\n    );\n  }\n}\n\nexport default BlocksRouter;\n"],"sourceRoot":""}